name: Deploy Backend to AWS action

on:
  push:
    branches:
      - main
    paths:
      - backend/**

env:
  AWS_REGION: ap-northeast-2
  ECR_REPO: 717934568012.dkr.ecr.ap-northeast-2.amazonaws.com/ecs-repo
  ECS_CLUSTER: DevCluster
  ECS_SERVICE: webserver-new

jobs:
  deploy:
    name: Deploy Backend to AWS job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
      - name: Build, tag, and push image to AWS ECR
        env:
          IMAGE_TAG: v0
          DB_STRING:                     ${{  secrets.DB_STRING }}
          GOOGLE_IMAGE_SEARCH_URL:       ${{  vars.GOOGLE_IMAGE_SEARCH_URL }}      
          GOOGLE_IMAGE_SEARCH_ENGINE_ID: ${{  vars.GOOGLE_IMAGE_SEARCH_ENGINE_ID  }}
          GOOGLE_IMAGE_SEARCH_TOKEN:     ${{  secrets.GOOGLE_IMAGE_SEARCH_TOKEN }}
          GOOGLE_IMAGE_SEARCH_LICENSE:   ${{  vars.GOOGLE_IMAGE_SEARCH_LICENSE  }}
          S3_WORDGAME_BUCKET_NAME:       ${{  vars.S3_WORDGAME_BUCKET_NAME  }}
          S3_WORDGAME_BUCKET_URL_START:  ${{  vars.S3_WORDGAME_BUCKET_URL_START }}
          OPENAI_DALLE_URL:              ${{  vars.OPENAI_DALLE_URL }} 
          OPENAI_DALLE_KEY:              ${{  vars.OPENAI_DALLE_KEY }}
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG --platform linux/amd64 backend/
          docker push $ECR_REPO:$IMAGE_TAG
      - name: Force ECS RE-Deployment
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
